<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>EvilDicom</name>
  </assembly>
  <members>
    <member name="N:EvilDicom.Components">
    </member>
    <member name="T:EvilDicom.Components.DicomFile">
    </member>
    <member name="M:EvilDicom.Components.DicomFile.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Components.DicomFile">DicomFile</see> class.</summary>
    </member>
    <member name="M:EvilDicom.Components.DicomFile.#ctor(System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Components.DicomFile">DicomFile</see> class.</summary>
      <param name="path">
</param>
    </member>
    <member name="M:EvilDicom.Components.DicomFile.writeFile(System.String,System.Boolean)">
      <param name="path">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="M:EvilDicom.Components.DicomFile.writeFile(System.String)">
      <param name="path">
</param>
    </member>
    <member name="N:EvilDicom.Helper">
    </member>
    <member name="T:EvilDicom.Helper.ArrayHelper">
    </member>
    <member name="M:EvilDicom.Helper.ArrayHelper.ReverseArray``1(``0[])">
      <param name="array">
</param>
    </member>
    <member name="M:EvilDicom.Helper.ArrayHelper.CopyArray``1(``0[])">
      <param name="array">
</param>
    </member>
    <member name="M:EvilDicom.Helper.ArrayHelper.CopyList``1(System.Collections.Generic.List{``0})">
      <param name="list">
</param>
    </member>
    <member name="M:EvilDicom.Helper.ArrayHelper.isEqualArray``1(``0[],``0[])">
      <param name="array1">
</param>
      <param name="array2">
</param>
    </member>
    <member name="T:EvilDicom.Components.Tag">
    </member>
    <member name="M:EvilDicom.Components.Tag.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Components.Tag">Tag</see> class.</summary>
    </member>
    <member name="M:EvilDicom.Components.Tag.#ctor(System.String,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Components.Tag">Tag</see> class.</summary>
      <param name="group">
</param>
      <param name="element">
</param>
    </member>
    <member name="M:EvilDicom.Components.Tag.#ctor(System.Byte[],System.Boolean)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Components.Tag">Tag</see> class.</summary>
      <param name="tagBytes">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="P:EvilDicom.Components.Tag.Id">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.Tag.Group">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.Tag.Description">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.Tag.Element">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDicom.VR">
    </member>
    <member name="T:EvilDicom.VR.DateVR">
    </member>
    <member name="M:EvilDicom.VR.DateVR.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.DateVR">DateVR</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.DateVR.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDicom.Image">
    </member>
    <member name="T:EvilDicom.Image.WindowLevel">
    </member>
    <member name="M:EvilDicom.Image.WindowLevel.#ctor(System.Int32,System.Int32)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Image.WindowLevel">WindowLevel</see> class.</summary>
      <param name="window">
</param>
      <param name="level">
</param>
    </member>
    <member name="M:EvilDicom.Image.WindowLevel.#ctor(System.Double,System.Double)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Image.WindowLevel">WindowLevel</see> class.</summary>
      <param name="window">
</param>
      <param name="level">
</param>
    </member>
    <member name="M:EvilDicom.Image.WindowLevel.getValue(System.Int32)">
      <param name="origValue">
</param>
    </member>
    <member name="M:EvilDicom.Image.WindowLevel.getValue(System.Double)">
      <param name="origValue">
</param>
    </member>
    <member name="P:EvilDicom.Image.WindowLevel.Level">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.WindowLevel.Window">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.OtherFloatString">
    </member>
    <member name="M:EvilDicom.VR.OtherFloatString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.OtherFloatString">OtherFloatString</see> class.</summary>
    </member>
    <member name="M:EvilDicom.VR.OtherFloatString.encode(System.Boolean)">
      <summary>
This method is used to check the endian of the Dicom object and arrange the byte data accordingly. Only used in children.</summary>
      <param name="isLittleEndian">
</param>
    </member>
    <member name="P:EvilDicom.VR.OtherFloatString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.FloatingPointSingle">
    </member>
    <member name="M:EvilDicom.VR.FloatingPointSingle.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.FloatingPointSingle">FloatingPointSingle</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.FloatingPointSingle.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Components.DicomObject">
    </member>
    <member name="M:EvilDicom.Components.DicomObject.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Components.DicomObject">DicomObject</see> class.</summary>
    </member>
    <member name="M:EvilDicom.Components.DicomObject.writeBytes(System.IO.BinaryWriter,System.Boolean)">
      <param name="b">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="M:EvilDicom.Components.DicomObject.encode(System.Boolean)">
      <summary>
This method is used to check the endian of the Dicom object and arrange the byte data accordingly. Only used in children.</summary>
      <param name="isLittleEndian">
</param>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.EncodeType">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.VR">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.Length">
      <summary>
Gets .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.IsLittleEndian">
      <summary>
Gets or sets a value indicating whether this instance .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.ByteData">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.Tag">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomObject.IsSequence">
      <summary>
Gets a value indicating whether this instance .</summary>
    </member>
    <member name="T:EvilDicom.VR.AbstractBinaryVR">
    </member>
    <member name="M:EvilDicom.VR.AbstractBinaryVR.encode(System.Boolean)">
      <summary>
This method is used to check the endian of the Dicom object and arrange the byte data accordingly. Only used in children.</summary>
      <param name="isLittleEndian">
</param>
    </member>
    <member name="P:EvilDicom.VR.AbstractBinaryVR.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Image.AbstractImageCube">
    </member>
    <member name="M:EvilDicom.Image.AbstractImageCube.getImage">
      <summary>
This method is designed to return a 24bit RGB bitmap image based on the window and level of the image. The real voxel values are stored in the voxels of the image grid, and can contain much higher range than what can be displayed on a monitor. This method then, reduces the actual voxels to a small window and returns the image calculated. It can be called right after setting the window and level function and has a fast response.</summary>
      <returns>
The 24bit RGB image for display</returns>
    </member>
    <member name="M:EvilDicom.Image.AbstractImageCube.getImage(System.Int32)">
      <summary>
This method is designed to return a 24bit RGB bitmap image from one slice of the cube based on the window and level of the image.</summary>
      <returns>
The 24bit RGB image for display</returns>
      <param name="slice">
the integer slice number to be drawn. The first slice is zero.</param>
    </member>
    <member name="P:EvilDicom.Image.AbstractImageCube.OffsetVector">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImageCube.NumberOfFrames">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.OtherByteString">
    </member>
    <member name="M:EvilDicom.VR.OtherByteString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.OtherByteString">OtherByteString</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.OtherByteString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Pixel.Y">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Pixel.X">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Pixel.Value">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.LongText">
    </member>
    <member name="M:EvilDicom.VR.LongText.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.LongText">LongText</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.TimeVR">
    </member>
    <member name="M:EvilDicom.VR.TimeVR.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.TimeVR">TimeVR</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.TimeVR.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDicom.RTPlan">
    </member>
    <member name="T:EvilDicom.RTPlan.DoseCube">
    </member>
    <member name="M:EvilDicom.RTPlan.DoseCube.#ctor(EvilDicom.Components.DicomFile)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.RTPlan.DoseCube">DoseCube</see> class.</summary>
      <param name="df">
</param>
    </member>
    <member name="P:EvilDicom.RTPlan.DoseCube.DoseUnit">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.RTPlan.DoseCube.DoseGridScaling">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.ShortText">
    </member>
    <member name="M:EvilDicom.VR.ShortText.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.ShortText">ShortText</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.FloatingPointDouble">
    </member>
    <member name="M:EvilDicom.VR.FloatingPointDouble.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.FloatingPointDouble">FloatingPointDouble</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.FloatingPointDouble.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.DecimalString">
    </member>
    <member name="M:EvilDicom.VR.DecimalString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.DecimalString">DecimalString</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.DecimalString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Helper.ByteHelper">
    </member>
    <member name="M:EvilDicom.Helper.ByteHelper.ByteArrayToHexString(System.Byte[])">
      <param name="Bytes">
</param>
    </member>
    <member name="M:EvilDicom.Helper.ByteHelper.HexStringToByteArray(System.String)">
      <param name="Hex">
</param>
    </member>
    <member name="T:EvilDicom.VR.ApplicationEntity">
    </member>
    <member name="M:EvilDicom.VR.ApplicationEntity.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.ApplicationEntity">ApplicationEntity</see> class.</summary>
    </member>
    <member name="T:EvilDicom.Components.DicomDictionary">
    </member>
    <member name="M:EvilDicom.Components.DicomDictionary.isKnownTag(EvilDicom.Components.Tag)">
      <param name="t">
</param>
    </member>
    <member name="T:EvilDicom.VR.PersonsName">
    </member>
    <member name="M:EvilDicom.VR.PersonsName.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.PersonsName">PersonsName</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.SignedShort">
    </member>
    <member name="M:EvilDicom.VR.SignedShort.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.SignedShort">SignedShort</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.SignedShort.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.AttributeTag">
    </member>
    <member name="M:EvilDicom.VR.AttributeTag.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.AttributeTag">AttributeTag</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.AttributeTag.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Image.AbstractImage">
    </member>
    <member name="M:EvilDicom.Image.AbstractImage.getMaxVoxelValue">
    </member>
    <member name="M:EvilDicom.Image.AbstractImage.getMinVoxelValue">
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.ImagePosition">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.SliceThickness">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.Function">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.Rows">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.PixelWidth">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.Voxels">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.Image">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.Columns">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.TransferSyntax">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.SamplesPerPixel">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.BitsAllocated">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.PixelHeight">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.AbstractImage.WindowAndLevel">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Components.DicomCollection">
    </member>
    <member name="M:EvilDicom.Components.DicomCollection.addDicomObject(EvilDicom.Components.DicomObject)">
      <param name="d">
</param>
    </member>
    <member name="M:EvilDicom.Components.DicomCollection.find(System.String)">
      <summary>
This method searches the dicom file for a particular tag.</summary>
      <returns>
Returns the fist tag found in the dicom file that matches the id input parameter.</returns>
      <param name="id">
The tag to be searched (eg. "00030000" for 0003,0000)</param>
    </member>
    <member name="M:EvilDicom.Components.DicomCollection.find(System.String[])">
      <summary>
This method searches the dicom file using a chain of strings. It is intended to be used to find particular tags deep within the Dicom structure. To use it, simply input a string array containing the descending tags to be searched. The method will return results that match the last tag in the string array if and only if they have parent tags that match the preceeding tags in the string array. A string array then looks like this: new string[]{parent, child A, child B (child of A), clild C (child of B)..etc...,child Final (search taget)}</summary>
      <returns>
Returns a list of dicom objects that match the tag search chain</returns>
      <param name="ids">
string array that contains the descendant selection tags with the target in the last index</param>
    </member>
    <member name="M:EvilDicom.Components.DicomCollection.writeBytes(System.IO.BinaryWriter,System.Boolean)">
      <param name="b">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="P:EvilDicom.Components.DicomCollection.DicomObjects">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomCollection.IsLittleEndian">
      <summary>
Gets or sets a value indicating whether this instance .</summary>
    </member>
    <member name="P:EvilDicom.Components.DicomCollection.Length">
      <summary>
Gets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Position.Z">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Position.Y">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Position.X">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Z">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Y">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Red">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Alpha">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.X">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Blue">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Position">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Value">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.Voxel.Green">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Helper.TagHelper">
    </member>
    <member name="T:EvilDicom.Helper.DicomWriter">
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeDicomPreamble(System.IO.BinaryWriter)">
      <param name="b">
</param>
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeTag(System.IO.BinaryWriter,EvilDicom.Components.Tag,System.Boolean)">
      <param name="b">
</param>
      <param name="tag">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeTag(System.Byte[]@,EvilDicom.Components.Tag,System.Boolean)">
      <param name="bytes">
</param>
      <param name="tag">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeVR(System.IO.BinaryWriter,System.String,EvilDicom.Components.Constants.EncodeType)">
      <param name="b">
</param>
      <param name="vr">
</param>
      <param name="encType">
</param>
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeLength(System.IO.BinaryWriter,EvilDicom.Components.Constants.EncodeType,System.Int32,System.Boolean)">
      <param name="b">
</param>
      <param name="encType">
</param>
      <param name="length">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeLength(System.IO.BinaryWriter,System.Byte[])">
      <summary>
This method should only be used to write the zero or indefinite length attributes as there is no correction for endianess;</summary>
      <param name="b">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:EvilDicom.Helper.DicomWriter.writeData(System.IO.BinaryWriter,EvilDicom.Components.DicomObject,System.Boolean)">
      <param name="b">
</param>
      <param name="d">
</param>
      <param name="isLittleEndian">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="M:EvilDicom.Image.ScalingFunction.#ctor(System.Double,System.Double)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Image.ScalingFunction">ScalingFunction</see> structure.</summary>
      <param name="slope">
</param>
      <param name="intercept">
</param>
    </member>
    <member name="M:EvilDicom.Image.ScalingFunction.rescaledValue(System.Double)">
      <param name="value">
</param>
    </member>
    <member name="M:EvilDicom.Image.ScalingFunction.rescaledValue(System.Int32)">
      <param name="value">
</param>
    </member>
    <member name="P:EvilDicom.Image.ScalingFunction.Intercept">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.ScalingFunction.Slope">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.DateTimeVR">
    </member>
    <member name="M:EvilDicom.VR.DateTimeVR.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.DateTimeVR">DateTimeVR</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.DateTimeVR.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.UnlimitedText">
    </member>
    <member name="M:EvilDicom.VR.UnlimitedText.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.UnlimitedText">UnlimitedText</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.UnsignedLong">
    </member>
    <member name="M:EvilDicom.VR.UnsignedLong.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.UnsignedLong">UnsignedLong</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.UnsignedLong.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.IntegerString">
    </member>
    <member name="M:EvilDicom.VR.IntegerString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.IntegerString">IntegerString</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.IntegerString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.OtherWordString">
    </member>
    <member name="M:EvilDicom.VR.OtherWordString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.OtherWordString">OtherWordString</see> class.</summary>
    </member>
    <member name="M:EvilDicom.VR.OtherWordString.encode(System.Boolean)">
      <summary>
This method is used to check the endian of the Dicom object and arrange the byte data accordingly. Only used in children.</summary>
      <param name="isLittleEndian">
</param>
    </member>
    <member name="P:EvilDicom.VR.OtherWordString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.UniqueIdentifier">
    </member>
    <member name="M:EvilDicom.VR.UniqueIdentifier.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.UniqueIdentifier">UniqueIdentifier</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.AbstractStringVR">
    </member>
    <member name="P:EvilDicom.VR.AbstractStringVR.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Image.VoxelGrid">
    </member>
    <member name="M:EvilDicom.Image.VoxelGrid.#ctor(EvilDicom.Components.DicomFile)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.Image.VoxelGrid">VoxelGrid</see> class.</summary>
      <param name="df">
</param>
    </member>
    <member name="P:EvilDicom.Image.VoxelGrid.ImageNumber">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.Image.VoxelGrid.SliceLocation">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.SignedLong">
    </member>
    <member name="M:EvilDicom.VR.SignedLong.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.SignedLong">SignedLong</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.SignedLong.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.Components.Constants">
    </member>
    <member name="T:EvilDicom.VR.LongString">
    </member>
    <member name="M:EvilDicom.VR.LongString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.LongString">LongString</see> class.</summary>
    </member>
    <member name="T:EvilDicom.Image.AbstractImagePlane">
    </member>
    <member name="M:EvilDicom.Image.AbstractImagePlane.getImage">
      <summary>
This method is designed to return a 24bit RGB bitmap image based on the window and level of the image. The real voxel values are stored in the voxels of the image grid, and can contain much higher range than what can be displayed on a monitor. This method then, reduces the actual voxels to a small window and returns the image calculated. It can be called right after setting the window and level function and has a fast response.</summary>
      <returns>
The 24bit RGB image for display</returns>
    </member>
    <member name="T:EvilDicom.VR.CodeString">
    </member>
    <member name="M:EvilDicom.VR.CodeString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.CodeString">CodeString</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.ShortString">
    </member>
    <member name="M:EvilDicom.VR.ShortString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.ShortString">ShortString</see> class.</summary>
    </member>
    <member name="T:EvilDicom.VR.AgeString">
    </member>
    <member name="M:EvilDicom.VR.AgeString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.AgeString">AgeString</see> class.</summary>
    </member>
    <member name="M:EvilDicom.VR.AgeString.setAge(EvilDicom.VR.AgeString.Age)">
      <param name="age">
</param>
    </member>
    <member name="M:EvilDicom.VR.AgeString.getAge">
    </member>
    <member name="T:EvilDicom.VR.AgeString.Age">
    </member>
    <member name="P:EvilDicom.VR.AgeString.Age.Units">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.VR.AgeString.Age.Number">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDicom.VR.AgeString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDicom.VR.UnsignedShort">
    </member>
    <member name="M:EvilDicom.VR.UnsignedShort.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDicom.VR.UnsignedShort">UnsignedShort</see> class.</summary>
    </member>
    <member name="P:EvilDicom.VR.UnsignedShort.Data">
      <summary>
Gets or sets .</summary>
    </member>
  </members>
</doc>
