<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImageResizer.Plugins.SqlReader</name>
    </assembly>
    <members>
        <member name="T:ImageResizer.Plugins.SqlReader.SqlReaderPlugin">
            <summary>
            Specialized VirtualPathProvider that allows accessing database images as if they are on disk.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.Install(ImageResizer.Configuration.Config)">
            <summary>
            Installes the plugin into the specified configuration. Once installed, it cannot be uninstalled.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.Uninstall(ImageResizer.Configuration.Config)">
            <summary>
            This plugin cannot be uninstalled as ASP.NET does not provide a 'undo' function for RegisterVirtualPathProvider
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.FireAuthorizeEvent(System.String)">
            <summary>
            Called before any database op. Fires the BeforeAccess event
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetStream(System.String)">
            <summary>
            Returns a stream to the 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.CreateIdParameter(System.String)">
            <summary>
            Creates a SQL paramater of the correct type for the row id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.RowExists(System.String)">
            <summary>
            Executes existsQuery, and returns true if the value is greater than 0
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetDateModifiedUtc(System.String)">
            <summary>
            Returns DateTime.MinValue if there are no rows, or no values on the row.
            Executes ModifiedDateQuery, then returns the first non-null datetime value on the first row.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetConnectionObj">
            <summary>
            Creates and returns a SqlConnection object for the database based on the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetCacheDependencyQuery(System.String)">
            <summary>
            Returns a SqlCommand cache dependency using the modifiedQuery.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.Initialize">
            <summary>
            No initialization needed for this VPP
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.ParseIdFromVirtualPath(System.String)">
            <summary>
            Supports int, string, and GUID IDs. Override this to modify ID parsing if you can't do it with rewrite rules.
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.IsPathVirtual(System.String)">
            <summary>
              Determines whether a specified virtual path is within
              the virtual file system.
            </summary>
            <param name="virtualPath">An absolute virtual path.</param>
            <returns>
              true if the virtual path is within the 
              virtual file sytem; otherwise, false.
            </returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.FileExists(System.String)">
            <summary>
            VPP method - not for external use
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetFile(System.String)">
            <summary>
            VPP method, not for external use
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.FileExists(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns true if the specified virtual file should be provided by this reader and it exists. False if this provider cannot/should not provide it, or it doesn't exist.
            </summary>
            <param name="virtualPath"></param>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetFile(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Returns an IVirtualFile instance if the file exists in this provider.
            </summary>
            <param name="virtualPath"></param>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)">
            <summary>
            VPP method, not for external use
            </summary>
            <param name="virtualPath"></param>
            <param name="virtualPathDependencies"></param>
            <param name="utcStart"></param>
            <returns></returns>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.GetIssues">
            <summary>
            Provides the diagnostics system with a list of configuration issues
            </summary>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.Settings">
            <summary>
            Provides all the configuration options for the plugin.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.FailedToRegisterVpp">
            <summary>
            True if the provider attempted to register itself as a VirtualPathProvider and failed due to limited security clearance.
            False if it did not attempt, or if it succeeded.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.IsStringKey">
            <summary>
            Returns true if Settings.ImageIdType is a string type
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderPlugin.IsIntKey">
            <summary>
            Returns true if Settings.ImageIdType  is an integer type
            </summary>
        </member>
        <member name="T:ImageResizer.Plugins.SqlReader.DatabaseFile">
            <summary>
            Represents a blob stored in the database. Provides methods for verifying existence, opening a stream, and checking the modified date.
            Modified date and existence values are cached after the first query.
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.DatabaseFile.Open">
            <summary>
            Returns a stream to the database blob associated with the id. Throws a FileNotFound exception if the row is missing. Allows Image404 to work properly.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.DatabaseFile.Exists">
            <summary>
            Returns true if the row exists. 
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.DatabaseFile.ModifiedDateUTC">
            <summary>
            Returns the last modified date of the row. Cached for performance.
            </summary>
        </member>
        <member name="T:ImageResizer.Plugins.SqlReader.SqlReaderSettings">
            <summary>
            Holds settings used to create a SqlReader
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderSettings.FireBeforeAccess(System.String)">
            <summary>
            Fires the BeforeAccess event
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderSettings.IsStringType(System.Data.SqlDbType)">
            <summary>
            Returns true if the specified type is a kind of strings
            </summary>
        </member>
        <member name="M:ImageResizer.Plugins.SqlReader.SqlReaderSettings.IsIntType(System.Data.SqlDbType)">
            <summary>
            Returns true if the specified type is a kind of integer
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="E:ImageResizer.Plugins.SqlReader.SqlReaderSettings.BeforeAccess">
            <summary>
            Called before accessing any row in the database. The row ID is passed as a string argument.
            If the current user should not access the row, throw an HttpException(403, "message")
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.StripFileExtension">
            <summary>
            When true, the last file extension segment will be removed from the URL before the SQL Id is parsed. Only relevant when ImageIdType is a string type. Always true for other values.
            Configured by setting 'extensionPartOfId' to the opposite value.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.RegisterAsVirtualPathProvider">
            <summary>
            (default: true) When true, the SqlReader will be registered as a VirtualPathProvider with ASP.NET, which will
            make this plugin's virtual files accessible from all code which depends on the VirtualPathProvider system. If trust levels don't allow that, it falls back to IVirtualImageProvider mode, which allows the image resizer to access the files, but not other systems, so you'll need to enable cacheUnmodifiedFiles if you want to access files without resizing them.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.RequireImageExtension">
            <summary>
            (default true) When false, all URLs inside the PathPrefix folder will be assumed to be images, and will be handled by this plugin.
            You should still use image extensions, otherwise we don't know what content type to send with the response, and browsers will choke. 
            It's  also the cleanest way to tell the image resizer what kind of file type you'd like back when you request resizing.
            This setting is designed to support non-image file serving from the DB.
            It will also cause conflicts if PathPrefix overlaps with a folder name used for something else.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.UntrustedData">
            <summary>
            (default: false) When true, all requests will be re-encoded before being served to the client. Invalid or malicious images will fail with an error if they cannot be read as images.
            This should prevent malicious files from being served to the client.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.CacheUnmodifiedFiles">
            <summary>
            (default false). When true, files and unmodified images (i.e, no querystring) will be cached to disk (if they are requested that way) instead of only caching requests for resized images.
            DiskCache plugin must be installed for this to have any effect.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.PathPrefix">
            <summary>
            Defines a virtual path where database images can be accessed. Defaults to "~/databaseimages/"
            Ex image URL: localhost/databaseimages/4953.jpg
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.VirtualPathPrefix">
            <summary>
            Returns PathPrefix, but with the "~" resolved - I.e, a full virtual path. If the string doesn't start with / or ~, the application path is prepended as if it started with ~/
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.ConnectionString">
            <summary>
            The database connection string. Defaults to null. You can specify an existing web.config connection string using
            the "ConnectionStrings:namedKey" convention.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.ImageBlobQuery">
            <summary>
            The query that returns the binary image data based on the ID. Defaults to "SELECT Content FROM Images WHERE ImageID=@id"
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.ModifiedDateQuery">
            <summary>
            The query that returns the modified and created date of the image.  Defaults to "Select ModifiedDate, CreatedDate From Images WHERE ImageID=@id".
            Of all the dates returned by the query, the first non-empty date is used.
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.ImageExistsQuery">
            <summary>
            The query that returns whether an image exists or not. Defaults to "Select COUNT(ImageID) From Images WHERE ImageID=@id"
            </summary>
        </member>
        <member name="P:ImageResizer.Plugins.SqlReader.SqlReaderSettings.ImageIdType">
            <summary>
            Specifies the type of ID used for images. Int, string, and GUID types are the only valid values.
            Throws an ArgumentOutOfRange exception if set to an invalid value.
            </summary>
        </member>
    </members>
</doc>
