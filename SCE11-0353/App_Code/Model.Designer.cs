//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Appointments_Patients", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Patient), "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Appointments_Studies", "Studies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Study), "Appointments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Appointment), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RIS_DB_Model.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Patients_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Users), "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RIS_DB_Model.Patient), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Staff_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Users), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RIS_DB_Model.Staff), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_UserParticulars_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.aspnet_Users), "UserParticulars", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RIS_DB_Model.UserParticular), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Patients_BloodTypes", "BloodTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.BloodType), "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Patient), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_UserParticulars_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Country), "UserParticulars", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.UserParticular), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Staff_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Department), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Staff), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Images_Series", "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Series), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Image), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Images_Staff", "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Staff), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Image), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Notes_Images", "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Image), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Note), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Series_Modalities", "Modalities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Modality), "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Series), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Series_Studies", "Studies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Study), "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Series), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "FK_Studies_Staff", "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIS_DB_Model.Staff), "Studies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Study), true)]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.aspnet_Users))]
[assembly: EdmRelationshipAttribute("RIS_DB_Model", "PatientsWithDrugAllergies", "DrugAllergies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.DrugAllergy), "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIS_DB_Model.Patient))]

#endregion

namespace RIS_DB_Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RIS_DB_Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RIS_DB_Entities object using the connection string found in the 'RIS_DB_Entities' section of the application configuration file.
        /// </summary>
        public RIS_DB_Entities() : base("name=RIS_DB_Entities", "RIS_DB_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RIS_DB_Entities object.
        /// </summary>
        public RIS_DB_Entities(string connectionString) : base(connectionString, "RIS_DB_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RIS_DB_Entities object.
        /// </summary>
        public RIS_DB_Entities(EntityConnection connection) : base(connection, "RIS_DB_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BloodType> BloodTypes
        {
            get
            {
                if ((_BloodTypes == null))
                {
                    _BloodTypes = base.CreateObjectSet<BloodType>("BloodTypes");
                }
                return _BloodTypes;
            }
        }
        private ObjectSet<BloodType> _BloodTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugAllergy> DrugAllergies
        {
            get
            {
                if ((_DrugAllergies == null))
                {
                    _DrugAllergies = base.CreateObjectSet<DrugAllergy>("DrugAllergies");
                }
                return _DrugAllergies;
            }
        }
        private ObjectSet<DrugAllergy> _DrugAllergies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Modality> Modalities
        {
            get
            {
                if ((_Modalities == null))
                {
                    _Modalities = base.CreateObjectSet<Modality>("Modalities");
                }
                return _Modalities;
            }
        }
        private ObjectSet<Modality> _Modalities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Series> Series
        {
            get
            {
                if ((_Series == null))
                {
                    _Series = base.CreateObjectSet<Series>("Series");
                }
                return _Series;
            }
        }
        private ObjectSet<Series> _Series;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Study> Studies
        {
            get
            {
                if ((_Studies == null))
                {
                    _Studies = base.CreateObjectSet<Study>("Studies");
                }
                return _Studies;
            }
        }
        private ObjectSet<Study> _Studies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserParticular> UserParticulars
        {
            get
            {
                if ((_UserParticulars == null))
                {
                    _UserParticulars = base.CreateObjectSet<UserParticular>("UserParticulars");
                }
                return _UserParticulars;
            }
        }
        private ObjectSet<UserParticular> _UserParticulars;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BloodTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBloodTypes(BloodType bloodType)
        {
            base.AddObject("BloodTypes", bloodType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugAllergies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugAllergies(DrugAllergy drugAllergy)
        {
            base.AddObject("DrugAllergies", drugAllergy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModalities(Modality modality)
        {
            base.AddObject("Modalities", modality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Series EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeries(Series series)
        {
            base.AddObject("Series", series);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Studies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudies(Study study)
        {
            base.AddObject("Studies", study);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserParticulars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserParticulars(UserParticular userParticular)
        {
            base.AddObject("UserParticulars", userParticular);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="appointmentId">Initial value of the AppointmentId property.</param>
        /// <param name="appointmentDate">Initial value of the AppointmentDate property.</param>
        /// <param name="studyId">Initial value of the StudyId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        public static Appointment CreateAppointment(global::System.Int32 appointmentId, global::System.DateTime appointmentDate, global::System.Int32 studyId, global::System.Guid patientId)
        {
            Appointment appointment = new Appointment();
            appointment.AppointmentId = appointmentId;
            appointment.AppointmentDate = appointmentDate;
            appointment.StudyId = studyId;
            appointment.PatientId = patientId;
            return appointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppointmentId
        {
            get
            {
                return _AppointmentId;
            }
            set
            {
                if (_AppointmentId != value)
                {
                    OnAppointmentIdChanging(value);
                    ReportPropertyChanging("AppointmentId");
                    _AppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppointmentId");
                    OnAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AppointmentId;
        partial void OnAppointmentIdChanging(global::System.Int32 value);
        partial void OnAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AppointmentDate
        {
            get
            {
                return _AppointmentDate;
            }
            set
            {
                OnAppointmentDateChanging(value);
                ReportPropertyChanging("AppointmentDate");
                _AppointmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentDate");
                OnAppointmentDateChanged();
            }
        }
        private global::System.DateTime _AppointmentDate;
        partial void OnAppointmentDateChanging(global::System.DateTime value);
        partial void OnAppointmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyId
        {
            get
            {
                return _StudyId;
            }
            set
            {
                OnStudyIdChanging(value);
                ReportPropertyChanging("StudyId");
                _StudyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyId");
                OnStudyIdChanged();
            }
        }
        private global::System.Int32 _StudyId;
        partial void OnStudyIdChanging(global::System.Int32 value);
        partial void OnStudyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private global::System.Guid _PatientId;
        partial void OnPatientIdChanging(global::System.Guid value);
        partial void OnPatientIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Appointments_Patients", "Patients")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RIS_DB_Model.FK_Appointments_Patients", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RIS_DB_Model.FK_Appointments_Patients", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RIS_DB_Model.FK_Appointments_Patients", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RIS_DB_Model.FK_Appointments_Patients", "Patients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Appointments_Studies", "Studies")]
        public Study Study
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("RIS_DB_Model.FK_Appointments_Studies", "Studies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("RIS_DB_Model.FK_Appointments_Studies", "Studies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Study> StudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("RIS_DB_Model.FK_Appointments_Studies", "Studies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Study>("RIS_DB_Model.FK_Appointments_Studies", "Studies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Me__Appli__21B6055D", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("RIS_DB_Model.FK__aspnet_Me__Appli__21B6055D", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("RIS_DB_Model.FK__aspnet_Me__Appli__21B6055D", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Ro__Appli__38996AB5", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("RIS_DB_Model.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("RIS_DB_Model.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("RIS_DB_Model.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("RIS_DB_Model.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Me__Appli__21B6055D", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Ro__Appli__38996AB5", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("RIS_DB_Model.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("RIS_DB_Model.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("RIS_DB_Model.FK__aspnet_Us__Appli__0DAF0CB0", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("RIS_DB_Model.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Patients_aspnet_Users", "Patients")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RIS_DB_Model.FK_Patients_aspnet_Users", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RIS_DB_Model.FK_Patients_aspnet_Users", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("RIS_DB_Model.FK_Patients_aspnet_Users", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("RIS_DB_Model.FK_Patients_aspnet_Users", "Patients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Staff_aspnet_Users", "Staff")]
        public Staff Staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Staff_aspnet_Users", "Staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Staff_aspnet_Users", "Staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Staff> StaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Staff_aspnet_Users", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Staff>("RIS_DB_Model.FK_Staff_aspnet_Users", "Staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_UserParticulars_aspnet_Users", "UserParticulars")]
        public UserParticular UserParticular
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserParticular>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "UserParticulars").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserParticular>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "UserParticulars").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserParticular> UserParticularReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserParticular>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "UserParticulars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserParticular>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "UserParticulars", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("RIS_DB_Model.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("RIS_DB_Model.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="BloodType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BloodType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BloodType object.
        /// </summary>
        /// <param name="bloodTypeId">Initial value of the BloodTypeId property.</param>
        /// <param name="bloodTypeName">Initial value of the BloodTypeName property.</param>
        public static BloodType CreateBloodType(global::System.Int32 bloodTypeId, global::System.String bloodTypeName)
        {
            BloodType bloodType = new BloodType();
            bloodType.BloodTypeId = bloodTypeId;
            bloodType.BloodTypeName = bloodTypeName;
            return bloodType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BloodTypeId
        {
            get
            {
                return _BloodTypeId;
            }
            set
            {
                if (_BloodTypeId != value)
                {
                    OnBloodTypeIdChanging(value);
                    ReportPropertyChanging("BloodTypeId");
                    _BloodTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BloodTypeId");
                    OnBloodTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _BloodTypeId;
        partial void OnBloodTypeIdChanging(global::System.Int32 value);
        partial void OnBloodTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BloodTypeName
        {
            get
            {
                return _BloodTypeName;
            }
            set
            {
                OnBloodTypeNameChanging(value);
                ReportPropertyChanging("BloodTypeName");
                _BloodTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BloodTypeName");
                OnBloodTypeNameChanged();
            }
        }
        private global::System.String _BloodTypeName;
        partial void OnBloodTypeNameChanging(global::System.String value);
        partial void OnBloodTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Patients_BloodTypes", "Patients")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("RIS_DB_Model.FK_Patients_BloodTypes", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("RIS_DB_Model.FK_Patients_BloodTypes", "Patients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.CountryName = countryName;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_UserParticulars_Countries", "UserParticulars")]
        public EntityCollection<UserParticular> UserParticulars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserParticular>("RIS_DB_Model.FK_UserParticulars_Countries", "UserParticulars");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserParticular>("RIS_DB_Model.FK_UserParticulars_Countries", "UserParticulars", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="departmentName">Initial value of the DepartmentName property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentId, global::System.String departmentName)
        {
            Department department = new Department();
            department.DepartmentId = departmentId;
            department.DepartmentName = departmentName;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                if (_DepartmentId != value)
                {
                    OnDepartmentIdChanging(value);
                    ReportPropertyChanging("DepartmentId");
                    _DepartmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentId");
                    OnDepartmentIdChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Staff_Departments", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("RIS_DB_Model.FK_Staff_Departments", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("RIS_DB_Model.FK_Staff_Departments", "Staff", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="DrugAllergy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugAllergy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugAllergy object.
        /// </summary>
        /// <param name="drugAllergyId">Initial value of the DrugAllergyId property.</param>
        /// <param name="drugName">Initial value of the DrugName property.</param>
        public static DrugAllergy CreateDrugAllergy(global::System.Int32 drugAllergyId, global::System.String drugName)
        {
            DrugAllergy drugAllergy = new DrugAllergy();
            drugAllergy.DrugAllergyId = drugAllergyId;
            drugAllergy.DrugName = drugName;
            return drugAllergy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DrugAllergyId
        {
            get
            {
                return _DrugAllergyId;
            }
            set
            {
                if (_DrugAllergyId != value)
                {
                    OnDrugAllergyIdChanging(value);
                    ReportPropertyChanging("DrugAllergyId");
                    _DrugAllergyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrugAllergyId");
                    OnDrugAllergyIdChanged();
                }
            }
        }
        private global::System.Int32 _DrugAllergyId;
        partial void OnDrugAllergyIdChanging(global::System.Int32 value);
        partial void OnDrugAllergyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DrugName
        {
            get
            {
                return _DrugName;
            }
            set
            {
                OnDrugNameChanging(value);
                ReportPropertyChanging("DrugName");
                _DrugName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DrugName");
                OnDrugNameChanged();
            }
        }
        private global::System.String _DrugName;
        partial void OnDrugNameChanging(global::System.String value);
        partial void OnDrugNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "PatientsWithDrugAllergies", "Patients")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("RIS_DB_Model.PatientsWithDrugAllergies", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("RIS_DB_Model.PatientsWithDrugAllergies", "Patients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        /// <param name="seriesId">Initial value of the SeriesId property.</param>
        /// <param name="takenBy">Initial value of the TakenBy property.</param>
        public static Image CreateImage(global::System.Int32 imageId, global::System.Int32 seriesId, global::System.Guid takenBy)
        {
            Image image = new Image();
            image.ImageId = imageId;
            image.SeriesId = seriesId;
            image.TakenBy = takenBy;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                if (_ImageId != value)
                {
                    OnImageIdChanging(value);
                    ReportPropertyChanging("ImageId");
                    _ImageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageId");
                    OnImageIdChanged();
                }
            }
        }
        private global::System.Int32 _ImageId;
        partial void OnImageIdChanging(global::System.Int32 value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeriesId
        {
            get
            {
                return _SeriesId;
            }
            set
            {
                OnSeriesIdChanging(value);
                ReportPropertyChanging("SeriesId");
                _SeriesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeriesId");
                OnSeriesIdChanged();
            }
        }
        private global::System.Int32 _SeriesId;
        partial void OnSeriesIdChanging(global::System.Int32 value);
        partial void OnSeriesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TakenBy
        {
            get
            {
                return _TakenBy;
            }
            set
            {
                OnTakenByChanging(value);
                ReportPropertyChanging("TakenBy");
                _TakenBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TakenBy");
                OnTakenByChanged();
            }
        }
        private global::System.Guid _TakenBy;
        partial void OnTakenByChanging(global::System.Guid value);
        partial void OnTakenByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Images_Series", "Series")]
        public Series Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("RIS_DB_Model.FK_Images_Series", "Series").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("RIS_DB_Model.FK_Images_Series", "Series").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Series> SeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("RIS_DB_Model.FK_Images_Series", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Series>("RIS_DB_Model.FK_Images_Series", "Series", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Images_Staff", "Staff")]
        public Staff Staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Images_Staff", "Staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Images_Staff", "Staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Staff> StaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Images_Staff", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Staff>("RIS_DB_Model.FK_Images_Staff", "Staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Notes_Images", "Notes")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("RIS_DB_Model.FK_Notes_Images", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("RIS_DB_Model.FK_Notes_Images", "Notes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Modality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Modality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Modality object.
        /// </summary>
        /// <param name="modalityId">Initial value of the ModalityId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Modality CreateModality(global::System.Int32 modalityId, global::System.String description)
        {
            Modality modality = new Modality();
            modality.ModalityId = modalityId;
            modality.Description = description;
            return modality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModalityId
        {
            get
            {
                return _ModalityId;
            }
            set
            {
                if (_ModalityId != value)
                {
                    OnModalityIdChanging(value);
                    ReportPropertyChanging("ModalityId");
                    _ModalityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModalityId");
                    OnModalityIdChanged();
                }
            }
        }
        private global::System.Int32 _ModalityId;
        partial void OnModalityIdChanging(global::System.Int32 value);
        partial void OnModalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Series_Modalities", "Series")]
        public EntityCollection<Series> Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Series>("RIS_DB_Model.FK_Series_Modalities", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Series>("RIS_DB_Model.FK_Series_Modalities", "Series", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="noteId">Initial value of the NoteId property.</param>
        /// <param name="noteContent">Initial value of the NoteContent property.</param>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        public static Note CreateNote(global::System.Int32 noteId, global::System.String noteContent, global::System.Int32 imageId)
        {
            Note note = new Note();
            note.NoteId = noteId;
            note.NoteContent = noteContent;
            note.ImageId = imageId;
            return note;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteId
        {
            get
            {
                return _NoteId;
            }
            set
            {
                if (_NoteId != value)
                {
                    OnNoteIdChanging(value);
                    ReportPropertyChanging("NoteId");
                    _NoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoteId");
                    OnNoteIdChanged();
                }
            }
        }
        private global::System.Int32 _NoteId;
        partial void OnNoteIdChanging(global::System.Int32 value);
        partial void OnNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoteContent
        {
            get
            {
                return _NoteContent;
            }
            set
            {
                OnNoteContentChanging(value);
                ReportPropertyChanging("NoteContent");
                _NoteContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoteContent");
                OnNoteContentChanged();
            }
        }
        private global::System.String _NoteContent;
        partial void OnNoteContentChanging(global::System.String value);
        partial void OnNoteContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                OnImageIdChanging(value);
                ReportPropertyChanging("ImageId");
                _ImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageId");
                OnImageIdChanged();
            }
        }
        private global::System.Int32 _ImageId;
        partial void OnImageIdChanging(global::System.Int32 value);
        partial void OnImageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Notes_Images", "Images")]
        public Image Image
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("RIS_DB_Model.FK_Notes_Images", "Images").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("RIS_DB_Model.FK_Notes_Images", "Images").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Image> ImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("RIS_DB_Model.FK_Notes_Images", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Image>("RIS_DB_Model.FK_Notes_Images", "Images", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="bloodTypeId">Initial value of the BloodTypeId property.</param>
        public static Patient CreatePatient(global::System.Guid patientId, global::System.Int32 bloodTypeId)
        {
            Patient patient = new Patient();
            patient.PatientId = patientId;
            patient.BloodTypeId = bloodTypeId;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                if (_PatientId != value)
                {
                    OnPatientIdChanging(value);
                    ReportPropertyChanging("PatientId");
                    _PatientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientId");
                    OnPatientIdChanged();
                }
            }
        }
        private global::System.Guid _PatientId;
        partial void OnPatientIdChanging(global::System.Guid value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BloodTypeId
        {
            get
            {
                return _BloodTypeId;
            }
            set
            {
                OnBloodTypeIdChanging(value);
                ReportPropertyChanging("BloodTypeId");
                _BloodTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodTypeId");
                OnBloodTypeIdChanged();
            }
        }
        private global::System.Int32 _BloodTypeId;
        partial void OnBloodTypeIdChanging(global::System.Int32 value);
        partial void OnBloodTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Appointments_Patients", "Appointments")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("RIS_DB_Model.FK_Appointments_Patients", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("RIS_DB_Model.FK_Appointments_Patients", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Patients_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Patients_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Patients_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Patients_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Patients_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Patients_BloodTypes", "BloodTypes")]
        public BloodType BloodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BloodType>("RIS_DB_Model.FK_Patients_BloodTypes", "BloodTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BloodType>("RIS_DB_Model.FK_Patients_BloodTypes", "BloodTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BloodType> BloodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BloodType>("RIS_DB_Model.FK_Patients_BloodTypes", "BloodTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BloodType>("RIS_DB_Model.FK_Patients_BloodTypes", "BloodTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "PatientsWithDrugAllergies", "DrugAllergies")]
        public EntityCollection<DrugAllergy> DrugAllergies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugAllergy>("RIS_DB_Model.PatientsWithDrugAllergies", "DrugAllergies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugAllergy>("RIS_DB_Model.PatientsWithDrugAllergies", "DrugAllergies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Series")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Series : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Series object.
        /// </summary>
        /// <param name="seriesId">Initial value of the SeriesId property.</param>
        /// <param name="modalityId">Initial value of the ModalityId property.</param>
        /// <param name="studyId">Initial value of the StudyId property.</param>
        public static Series CreateSeries(global::System.Int32 seriesId, global::System.Int32 modalityId, global::System.Int32 studyId)
        {
            Series series = new Series();
            series.SeriesId = seriesId;
            series.ModalityId = modalityId;
            series.StudyId = studyId;
            return series;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeriesId
        {
            get
            {
                return _SeriesId;
            }
            set
            {
                if (_SeriesId != value)
                {
                    OnSeriesIdChanging(value);
                    ReportPropertyChanging("SeriesId");
                    _SeriesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeriesId");
                    OnSeriesIdChanged();
                }
            }
        }
        private global::System.Int32 _SeriesId;
        partial void OnSeriesIdChanging(global::System.Int32 value);
        partial void OnSeriesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModalityId
        {
            get
            {
                return _ModalityId;
            }
            set
            {
                OnModalityIdChanging(value);
                ReportPropertyChanging("ModalityId");
                _ModalityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModalityId");
                OnModalityIdChanged();
            }
        }
        private global::System.Int32 _ModalityId;
        partial void OnModalityIdChanging(global::System.Int32 value);
        partial void OnModalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyId
        {
            get
            {
                return _StudyId;
            }
            set
            {
                OnStudyIdChanging(value);
                ReportPropertyChanging("StudyId");
                _StudyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyId");
                OnStudyIdChanged();
            }
        }
        private global::System.Int32 _StudyId;
        partial void OnStudyIdChanging(global::System.Int32 value);
        partial void OnStudyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Images_Series", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("RIS_DB_Model.FK_Images_Series", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("RIS_DB_Model.FK_Images_Series", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Series_Modalities", "Modalities")]
        public Modality Modality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("RIS_DB_Model.FK_Series_Modalities", "Modalities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("RIS_DB_Model.FK_Series_Modalities", "Modalities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modality> ModalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modality>("RIS_DB_Model.FK_Series_Modalities", "Modalities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modality>("RIS_DB_Model.FK_Series_Modalities", "Modalities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Series_Studies", "Studies")]
        public Study Study
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("RIS_DB_Model.FK_Series_Studies", "Studies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("RIS_DB_Model.FK_Series_Studies", "Studies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Study> StudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("RIS_DB_Model.FK_Series_Studies", "Studies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Study>("RIS_DB_Model.FK_Series_Studies", "Studies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="staffId">Initial value of the StaffId property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static Staff CreateStaff(global::System.Guid staffId, global::System.Int32 departmentId)
        {
            Staff staff = new Staff();
            staff.StaffId = staffId;
            staff.DepartmentId = departmentId;
            return staff;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StaffId
        {
            get
            {
                return _StaffId;
            }
            set
            {
                if (_StaffId != value)
                {
                    OnStaffIdChanging(value);
                    ReportPropertyChanging("StaffId");
                    _StaffId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StaffId");
                    OnStaffIdChanged();
                }
            }
        }
        private global::System.Guid _StaffId;
        partial void OnStaffIdChanging(global::System.Guid value);
        partial void OnStaffIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Staff_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Staff_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Staff_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Staff_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("RIS_DB_Model.FK_Staff_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Staff_Departments", "Departments")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("RIS_DB_Model.FK_Staff_Departments", "Departments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("RIS_DB_Model.FK_Staff_Departments", "Departments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("RIS_DB_Model.FK_Staff_Departments", "Departments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("RIS_DB_Model.FK_Staff_Departments", "Departments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Images_Staff", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("RIS_DB_Model.FK_Images_Staff", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("RIS_DB_Model.FK_Images_Staff", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Studies_Staff", "Studies")]
        public EntityCollection<Study> Studies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Study>("RIS_DB_Model.FK_Studies_Staff", "Studies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Study>("RIS_DB_Model.FK_Studies_Staff", "Studies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="Study")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Study : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Study object.
        /// </summary>
        /// <param name="studyId">Initial value of the StudyId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateStarted">Initial value of the DateStarted property.</param>
        /// <param name="isCompleted">Initial value of the IsCompleted property.</param>
        /// <param name="referredBy">Initial value of the ReferredBy property.</param>
        public static Study CreateStudy(global::System.Int32 studyId, global::System.String description, global::System.DateTime dateStarted, global::System.Boolean isCompleted, global::System.Guid referredBy)
        {
            Study study = new Study();
            study.StudyId = studyId;
            study.Description = description;
            study.DateStarted = dateStarted;
            study.IsCompleted = isCompleted;
            study.ReferredBy = referredBy;
            return study;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyId
        {
            get
            {
                return _StudyId;
            }
            set
            {
                if (_StudyId != value)
                {
                    OnStudyIdChanging(value);
                    ReportPropertyChanging("StudyId");
                    _StudyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudyId");
                    OnStudyIdChanged();
                }
            }
        }
        private global::System.Int32 _StudyId;
        partial void OnStudyIdChanging(global::System.Int32 value);
        partial void OnStudyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStarted
        {
            get
            {
                return _DateStarted;
            }
            set
            {
                OnDateStartedChanging(value);
                ReportPropertyChanging("DateStarted");
                _DateStarted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStarted");
                OnDateStartedChanged();
            }
        }
        private global::System.DateTime _DateStarted;
        partial void OnDateStartedChanging(global::System.DateTime value);
        partial void OnDateStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompleted
        {
            get
            {
                return _IsCompleted;
            }
            set
            {
                OnIsCompletedChanging(value);
                ReportPropertyChanging("IsCompleted");
                _IsCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompleted");
                OnIsCompletedChanged();
            }
        }
        private global::System.Boolean _IsCompleted;
        partial void OnIsCompletedChanging(global::System.Boolean value);
        partial void OnIsCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCompleted
        {
            get
            {
                return _DateCompleted;
            }
            set
            {
                OnDateCompletedChanging(value);
                ReportPropertyChanging("DateCompleted");
                _DateCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCompleted");
                OnDateCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCompleted;
        partial void OnDateCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Diagnosis
        {
            get
            {
                return _Diagnosis;
            }
            set
            {
                OnDiagnosisChanging(value);
                ReportPropertyChanging("Diagnosis");
                _Diagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Diagnosis");
                OnDiagnosisChanged();
            }
        }
        private global::System.String _Diagnosis;
        partial void OnDiagnosisChanging(global::System.String value);
        partial void OnDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferredBy
        {
            get
            {
                return _ReferredBy;
            }
            set
            {
                OnReferredByChanging(value);
                ReportPropertyChanging("ReferredBy");
                _ReferredBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferredBy");
                OnReferredByChanged();
            }
        }
        private global::System.Guid _ReferredBy;
        partial void OnReferredByChanging(global::System.Guid value);
        partial void OnReferredByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Appointments_Studies", "Appointments")]
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("RIS_DB_Model.FK_Appointments_Studies", "Appointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("RIS_DB_Model.FK_Appointments_Studies", "Appointments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Series_Studies", "Series")]
        public EntityCollection<Series> Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Series>("RIS_DB_Model.FK_Series_Studies", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Series>("RIS_DB_Model.FK_Series_Studies", "Series", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_Studies_Staff", "Staff")]
        public Staff Staff
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Studies_Staff", "Staff").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Studies_Staff", "Staff").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Staff> StaffReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Staff>("RIS_DB_Model.FK_Studies_Staff", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Staff>("RIS_DB_Model.FK_Studies_Staff", "Staff", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RIS_DB_Model", Name="UserParticular")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserParticular : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserParticular object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="nRIC">Initial value of the NRIC property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="prefix">Initial value of the Prefix property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="contactNumber">Initial value of the ContactNumber property.</param>
        /// <param name="countryOfResidence">Initial value of the CountryOfResidence property.</param>
        /// <param name="nationality">Initial value of the Nationality property.</param>
        public static UserParticular CreateUserParticular(global::System.Guid userId, global::System.String nRIC, global::System.String firstName, global::System.String lastName, global::System.String gender, global::System.String prefix, global::System.DateTime dateOfBirth, global::System.String address, global::System.String postalCode, global::System.String contactNumber, global::System.Int32 countryOfResidence, global::System.String nationality)
        {
            UserParticular userParticular = new UserParticular();
            userParticular.UserId = userId;
            userParticular.NRIC = nRIC;
            userParticular.FirstName = firstName;
            userParticular.LastName = lastName;
            userParticular.Gender = gender;
            userParticular.Prefix = prefix;
            userParticular.DateOfBirth = dateOfBirth;
            userParticular.Address = address;
            userParticular.PostalCode = postalCode;
            userParticular.ContactNumber = contactNumber;
            userParticular.CountryOfResidence = countryOfResidence;
            userParticular.Nationality = nationality;
            return userParticular;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NRIC
        {
            get
            {
                return _NRIC;
            }
            set
            {
                OnNRICChanging(value);
                ReportPropertyChanging("NRIC");
                _NRIC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NRIC");
                OnNRICChanged();
            }
        }
        private global::System.String _NRIC;
        partial void OnNRICChanging(global::System.String value);
        partial void OnNRICChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryOfResidence
        {
            get
            {
                return _CountryOfResidence;
            }
            set
            {
                OnCountryOfResidenceChanging(value);
                ReportPropertyChanging("CountryOfResidence");
                _CountryOfResidence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryOfResidence");
                OnCountryOfResidenceChanged();
            }
        }
        private global::System.Int32 _CountryOfResidence;
        partial void OnCountryOfResidenceChanging(global::System.Int32 value);
        partial void OnCountryOfResidenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_UserParticulars_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("RIS_DB_Model.FK_UserParticulars_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RIS_DB_Model", "FK_UserParticulars_Countries", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RIS_DB_Model.FK_UserParticulars_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RIS_DB_Model.FK_UserParticulars_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("RIS_DB_Model.FK_UserParticulars_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("RIS_DB_Model.FK_UserParticulars_Countries", "Countries", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
